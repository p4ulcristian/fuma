["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.printing');\ndevtools.formatters.printing.markup_QMARK_ = (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup = (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"devtools.formatters.printing\",\"markup\",\"devtools.formatters.printing/markup\",-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup = (function devtools$formatters$printing$build_markup(var_args){\nvar args__5755__auto__ = [];\nvar len__5749__auto___13550 = arguments.length;\nvar i__5750__auto___13551 = (0);\nwhile(true){\nif((i__5750__auto___13551 < len__5749__auto___13550)){\nargs__5755__auto__.push((arguments[i__5750__auto___13551]));\n\nvar G__13552 = (i__5750__auto___13551 + (1));\ni__5750__auto___13551 = G__13552;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5756__auto__ = ((((2) < args__5755__auto__.length))?(new cljs.core.IndexedSeq(args__5755__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5756__auto__);\n});\n\n(devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic = (function (markup_db,fn_key,args){\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"missing markup method in markup-db: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(''),\"\\n\",\"f\"].join('')));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n}));\n\n(devtools.formatters.printing.build_markup.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(devtools.formatters.printing.build_markup.cljs$lang$applyTo = (function (seq13478){\nvar G__13479 = cljs.core.first(seq13478);\nvar seq13478__$1 = cljs.core.next(seq13478);\nvar G__13480 = cljs.core.first(seq13478__$1);\nvar seq13478__$2 = cljs.core.next(seq13478__$1);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13479,G__13480,seq13478__$2);\n}));\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed = (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__5025__auto__ = devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(or__5025__auto__){\nreturn or__5025__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference-surrogate\",\"reference-surrogate\",274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter = (function (group,markup_db){\nthis.group = group;\nthis.markup_db = markup_db;\nthis.cljs$lang$protocol_mask$partition0$ = 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(devtools.formatters.printing.TemplateWriter.prototype.merge = (function (a){\nvar self__ = this;\nvar _ = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.get_group = (function (){\nvar self__ = this;\nvar _ = this;\nreturn self__.group;\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,o){\nvar self__ = this;\nvar ___$1 = this;\nreturn (self__.group = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null)));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn null;\n}));\n\n(devtools.formatters.printing.TemplateWriter.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"group\",\"group\",-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"markup-db\",\"markup-db\",-1841597035,null)], null);\n}));\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$type = true);\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr = \"devtools.formatters.printing/TemplateWriter\");\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter = (function (this__5310__auto__,writer__5311__auto__,opt__5312__auto__){\nreturn cljs.core._write(writer__5311__auto__,\"devtools.formatters.printing/TemplateWriter\");\n}));\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter = (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer = (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ = (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5821__auto__ = cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5821__auto__)){\nvar tag = temp__5821__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\"reference\");\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed = (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__5023__auto__ = cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__5023__auto__){\nvar or__5025__auto__ = devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__5025__auto__)){\nreturn or__5025__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__5023__auto__;\n}\n})())){\nvar expandable_markup = cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"expandable\",\"expandable\",-704609097),group);\nvar surrogate_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"raw-surrogate\",\"raw-surrogate\",904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\"target\",\"target\",253001721)], 0));\nvar reference_markup = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed = (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\"circular-reference\",\"circular-reference\",970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed = (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\"render-metas\",\"render-metas\",1141294116),value,(function (p1__13493_SHARP_){\nreturn (!((cljs.core.meta(p1__13493_SHARP_) == null)));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"meta-wrapper\",\"meta-wrapper\",-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it = (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"\\\"]\")))))) || (((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\"]\")))))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#object[\")) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\"]\")))))))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\"#<\")) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\">\")))))))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\"native-reference\",\"native-reference\",-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.wrap_group_with_path_annotation = (function devtools$formatters$printing$wrap_group_with_path_annotation(group,path_info){\nif(cljs.core.truth_((function (){var and__5023__auto__ = devtools.prefs.pref(new cljs.core.Keyword(null,\"render-path-annotations\",\"render-path-annotations\",-1890931512));\nif(cljs.core.truth_(and__5023__auto__)){\nreturn (!((path_info == null)));\n} else {\nreturn and__5023__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"annotation\",new cljs.core.PersistentArrayMap(null, 1, [\"path\",cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(path_info)], null)], null),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.post_process_printed_output = (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_,path_info){\nreturn devtools.formatters.printing.wrap_group_with_path_annotation(devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db),path_info);\n});\ndevtools.formatters.printing.alt_printer_job = (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__13514 = opts;\nvar map__13514__$1 = cljs.core.__destructure_map(map__13514);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13514__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nif(cljs.core.truth_((function (){var or__5025__auto__ = (function (){try{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e13516){var _e__12912__auto__ = e13516;\nreturn false;\n}})();\nif(cljs.core.truth_(or__5025__auto__)){\nreturn or__5025__auto__;\n} else {\ntry{if((!((obj == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e13518){var _e__12912__auto__ = e13518;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"reference\",\"reference\",-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5821__auto__ = devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\"atomic\",\"atomic\",-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5821__auto__)){\nvar atomic_markup = temp__5821__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl = new cljs.core.Keyword(null,\"fallback-impl\",\"fallback-impl\",-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl = (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR__orig_val__13524 = devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__13525 = devtools.formatters.state.get_current_state();\n(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__temp_val__13525);\n\ntry{if(cljs.core.truth_(devtools.prefs.pref(new cljs.core.Keyword(null,\"render-path-annotations\",\"render-path-annotations\",-1890931512)))){\ndevtools.formatters.state.add_object_to_current_path_info_BANG_(obj);\n} else {\n}\n\nvar map__13527 = opts;\nvar map__13527__$1 = cljs.core.__destructure_map(map__13527);\nvar markup_db = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13527__$1,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734));\nvar circular_QMARK_ = devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer = devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734).cljs$core$IFn$_invoke$arity$1(opts));\nvar path_info = devtools.formatters.state.get_current_path_info();\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_,path_info));\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ = _STAR_current_state_STAR__orig_val__13524);\n}});\ndevtools.formatters.printing.managed_print = (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer = devtools.formatters.printing.make_template_writer(markup_db);\nvar opts = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"alt-impl\",\"alt-impl\",670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\"markup-db\",\"markup-db\",812838734),markup_db,new cljs.core.Keyword(null,\"print-length\",\"print-length\",1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\"max-header-elements\",\"max-header-elements\",713629864)),new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\"more-marker\",\"more-marker\",-14717935))], null);\nvar job_fn = (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});\nvar temp__5821__auto___13563 = devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5821__auto___13563)){\nvar managed_print_level_13564 = temp__5821__auto___13563;\nvar _STAR_print_level_STAR__orig_val__13538_13565 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__13539_13566 = managed_print_level_13564;\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__13539_13566);\n\ntry{devtools.formatters.state.update_current_state_BANG_((function (p1__13532_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__13532_SHARP_,null);\n}));\n\njob_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__13538_13565);\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer = (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol = (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/printing.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$shadow.js.shim.module$react"],"~:use-macros",["^ ","~$safe-call","~$devtools.oops"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.printing","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.prefs","^P","~$devtools.format","^Q","~$devtools.protocols","^R","~$devtools.formatters.state","^S","~$devtools.formatters.helpers","^T","~$cljs.core","^U","~$goog","^V"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",["^ ","~$add-object-to-current-path-info!","^S","~$IGroup","^R","~$expandable?","^T","~$ITemplate","^R","~$IDevtoolsFormat","^Q","~$get-managed-print-level","^S","~$get-current-state","^S","~$ISurrogate","^R","~$should-render?","^T","~$set-managed-print-level","^S","~$directly-printable?","^T","~$pref","^P","~$push-object-to-current-history!","^S","~$update-current-state!","^S","~$abbreviated?","^T","~$IFormat","^R","~$*current-state*","^S","~$get-current-path-info","^S","~$cljs-value?","^T","~$is-circular?","^S"],"^Y",["^ ","^F","^F","^U","^U","^P","^P"],"~:form",["~#list",["~$ns","^J",["^1D",["^Y",["^F","~:refer",["^E"]]]],["^1D",["^X",["^P","^1F",["^1:"]],["^Q","^1F",["^13"]],["^R","^1F",["^12","^10","^16","^1>"]],["^S","^1F",["^1;","^1?","^15","^1B","^14","^18","^[","^1@","^1<"]],["^T","^1F",["^1A","^11","^1=","^19","^17"]]]]]],"~:flags",["^ ","^Y",["^H",[]],"^X",["^H",[]]],"~:js-deps",[],"~:deps",["^V","^U","^P","^Q","^R","^S","^T"]],"^M","^J","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/printing.cljs"],"~:compiled-at",1759342952555,"^K",["^ ","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V","^F","^F"],"~:resource-name","devtools/formatters/printing.cljs","~:warnings",[],"~:source","(ns devtools.formatters.printing\n  (:require-macros [devtools.oops :refer [safe-call]])\n  (:require [devtools.prefs :refer [pref]]\n            [devtools.format :refer [IDevtoolsFormat]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.state :refer [push-object-to-current-history! *current-state* get-current-state\n                                               is-circular? get-managed-print-level set-managed-print-level\n                                               add-object-to-current-path-info! get-current-path-info\n                                               update-current-state!]]\n            [devtools.formatters.helpers :refer [cljs-value? expandable? abbreviated? directly-printable? should-render?]]))\n\n; -- helpers ----------------------------------------------------------------------------------------------------------------\n\n(defn markup? [value]\n  (::markup (meta value)))\n\n(defn mark-as-markup [value]\n  (with-meta value {::markup true}))\n\n(defn build-markup [markup-db fn-key & args]\n  (let [f (get markup-db fn-key)]\n    (assert f (str \"missing markup method in markup-db: \" fn-key))\n    (mark-as-markup (apply f args))))\n\n(defn wrap-value-as-reference-if-needed [markup-db value]\n  (if (or (directly-printable? value) (markup? value))\n    value\n    (build-markup markup-db :reference-surrogate value)))\n\n; -- TemplateWriter ---------------------------------------------------------------------------------------------------------\n\n(deftype TemplateWriter [^:mutable group markup-db]\n  Object\n  (merge [_ a] (set! group (concat group a)))\n  (get-group [_] group)\n  IWriter\n  (-write [_ o] (set! group (concat group [(wrap-value-as-reference-if-needed markup-db o)])))                                ; issue #21\n  (-flush [_] nil))\n\n(defn make-template-writer [markup-db]\n  (TemplateWriter. [] markup-db))\n\n; -- post-processing --------------------------------------------------------------------------------------------------------\n\n(defn already-reference? [group]\n  (if-let [tag (first (first group))]\n    (= tag \"reference\")))\n\n(defn wrap-group-in-reference-if-needed [group obj markup-db]\n  (if (and (not (already-reference? group))\n           (or (expandable? obj) (abbreviated? group)))\n    (let [expandable-markup (apply build-markup markup-db :expandable group)\n          surrogate-markup (build-markup markup-db :raw-surrogate obj expandable-markup :target)\n          reference-markup (build-markup markup-db :reference surrogate-markup)]\n      [reference-markup])\n    group))\n\n(defn wrap-group-in-circular-warning-if-needed [group markup-db circular?]\n  (if circular?\n    [(apply build-markup markup-db :circular-reference group)]\n    group))\n\n(defn wrap-group-in-meta-if-needed [group value markup-db]\n  (if (should-render? :render-metas value #(some? (meta %)))\n    [(apply (partial (:meta-wrapper markup-db) (meta value)) group)]\n    group))\n\n; default printer implementation can do this:\n;   :else (write-all writer \"#<\" (str obj) \">\")\n; we want to wrap stringified obj in a reference for further inspection\n;\n; this behaviour changed in https://github.com/clojure/clojurescript/commit/34c3b8985ed8197d90f441c46d168c4024a20eb8\n; newly functions and :else branch print \"#object [\" ... \"]\"\n;\n; in some situations obj can still be a clojurescript value (e.g. deftypes)\n; we have to implement a special flag to prevent infinite recursion\n; see https://github.com/binaryage/cljs-devtools/issues/2\n;     https://github.com/binaryage/cljs-devtools/issues/8\n(defn detect-edge-case-and-patch-it [group obj markup-db]\n  (cond\n    (or\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"\\\"]\"))                                          ; function case\n      (and (= (count group) 5) (= (nth group 0) \"#object[\") (= (nth group 4) \"]\"))                                            ; :else -constructor case\n      (and (= (count group) 3) (= (nth group 0) \"#object[\") (= (nth group 2) \"]\")))                                           ; :else -cljs$lang$ctorStr case\n    [(build-markup markup-db :native-reference obj)]\n\n    (and (= (count group) 3) (= (nth group 0) \"#<\") (= (str obj) (nth group 1)) (= (nth group 2) \">\"))                        ; old code prior r1.7.28\n    [(nth group 0) (build-markup :native-reference obj) (nth group 2)]\n\n    :else group))\n\n(defn wrap-group-with-path-annotation [group path-info]\n  (if (and (pref :render-path-annotations)\n           (some? path-info))\n    [(concat [\"annotation\" {\"path\" (into-array path-info)}] group)]\n    group))\n\n(defn post-process-printed-output [output-group obj markup-db circular? path-info]\n  (-> output-group\n      (detect-edge-case-and-patch-it obj markup-db)                                                                           ; an ugly hack\n      (wrap-group-in-reference-if-needed obj markup-db)\n      (wrap-group-in-circular-warning-if-needed markup-db circular?)\n      (wrap-group-in-meta-if-needed obj markup-db)\n      (wrap-group-with-path-annotation path-info)))\n\n; -- alternative printer ----------------------------------------------------------------------------------------------------\n\n(defn alt-printer-job [obj writer opts]\n  (let [{:keys [markup-db]} opts]\n    (if (or (safe-call satisfies? false IDevtoolsFormat obj)\n            (safe-call satisfies? false IFormat obj))                                                                         ; we have to wrap value in reference if detected IFormat\n      (-write writer (build-markup markup-db :reference obj))\n      (if-let [atomic-markup (build-markup markup-db :atomic obj)]\n        (-write writer atomic-markup)\n        (let [default-impl (:fallback-impl opts)\n              ; we want to limit print-level, at max-print-level level use maximal abbreviation e.g. [...] or {...}\n              inner-opts (if (= *print-level* 1) (assoc opts :print-length 0) opts)]\n          (default-impl obj writer inner-opts))))))\n\n(defn alt-printer-impl [obj writer opts]\n  (binding [*current-state* (get-current-state)]\n    (when (pref :render-path-annotations)\n      (add-object-to-current-path-info! obj))\n    (let [{:keys [markup-db]} opts\n          circular? (is-circular? obj)\n          inner-writer (make-template-writer (:markup-db opts))\n          path-info (get-current-path-info)]\n      (push-object-to-current-history! obj)\n      (alt-printer-job obj inner-writer opts)\n      (.merge writer (post-process-printed-output (.get-group inner-writer) obj markup-db circular? path-info)))))\n\n; -- common code for managed printing ---------------------------------------------------------------------------------------\n\n(defn managed-print [tag markup-db printer]\n  (let [writer (make-template-writer markup-db)\n        opts {:alt-impl     alt-printer-impl\n              :markup-db    markup-db\n              :print-length (pref :max-header-elements)\n              :more-marker  (pref :more-marker)}\n        job-fn #(printer writer opts)]\n    (if-let [managed-print-level (get-managed-print-level)]\n      (binding [*print-level* managed-print-level]\n        (update-current-state! #(set-managed-print-level % nil))                                                              ; reset managed-print-level so it does not propagate further down in expaded data\n        (job-fn))\n      (job-fn))\n    (concat [(pref tag)] (.get-group writer))))\n\n; -- public printing API ----------------------------------------------------------------------------------------------------\n\n(defn managed-print-via-writer [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (pr-seq-writer [value] writer opts))))                                                       ; note we use pr-seq-writer because pr-writer is private for some reason\n\n(defn managed-print-via-protocol [value tag markup-db]\n  (managed-print tag markup-db (fn [writer opts]\n                                 (-pr-writer value writer opts))))\n","~:reader-features",["^H",["~:cljs"]],"~:used-var-namespaces",["^H",["^T","^J","^S","^U","~$js","^R","^Q","^P"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.printing/markup?","value","cljs.core/meta","devtools.formatters.printing/mark-as-markup","cljs.core/with-meta","var_args","args__5755__auto__","len__5749__auto__","i__5750__auto__","argseq__5756__auto__","cljs.core/IndexedSeq","devtools.formatters.printing/build-markup","seq13478","G__13479","cljs.core/first","cljs.core/next","G__13480","self__5734__auto__","markup-db","fn-key","args","f","cljs.core.get","js/Error","cljs.core.apply","devtools.formatters.printing/wrap-value-as-reference-if-needed","or__5025__auto__","devtools.formatters.helpers/directly-printable?","devtools.formatters.printing.build_markup","this__5310__auto__","writer__5311__auto__","opt__5312__auto__","cljs.core/-write","devtools.formatters.printing/TemplateWriter","devtools.formatters.printing/->TemplateWriter","group","_","a","cljs.core.concat","o","devtools.formatters.printing/make-template-writer","devtools.formatters.printing/already-reference?","temp__5821__auto__","tag","cljs.core._EQ_","devtools.formatters.printing/wrap-group-in-reference-if-needed","obj","and__5023__auto__","cljs.core/not","devtools.formatters.helpers/expandable?","devtools.formatters.helpers/abbreviated?","expandable-markup","surrogate-markup","reference-markup","devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","circular?","devtools.formatters.printing/wrap-group-in-meta-if-needed","p1__13493#","devtools.formatters.helpers/should-render?","cljs.core.partial","devtools.formatters.printing/detect-edge-case-and-patch-it","cljs.core/count","cljs.core.nth","devtools.formatters.printing/wrap-group-with-path-annotation","path-info","devtools.prefs/pref","cljs.core.into_array","devtools.formatters.printing/post-process-printed-output","output-group","devtools.formatters.printing/alt-printer-job","writer","opts","map__13514","cljs.core/--destructure-map","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","_e__12912__auto__","e13516","devtools.format/IDevtoolsFormat","e13518","devtools.protocols/IFormat","atomic-markup","default-impl","inner-opts","cljs.core/*print-level*","cljs.core.assoc","devtools.formatters.printing/alt-printer-impl","*current-state*-orig-val__13524","*current-state*-temp-val__13525","devtools.formatters.state/*current-state*","devtools.formatters.state/get-current-state","devtools.formatters.state/add-object-to-current-path-info!","map__13527","devtools.formatters.state/is-circular?","inner-writer","devtools.formatters.state/get-current-path-info","devtools.formatters.state/push-object-to-current-history!","devtools.formatters.printing/managed-print","printer","job-fn","managed-print-level","devtools.formatters.state/get-managed-print-level","*print-level*-orig-val__13538","*print-level*-temp-val__13539","p1__13532#","devtools.formatters.state/update-current-state!","devtools.formatters.state/set-managed-print-level","devtools.formatters.printing/managed-print-via-writer","cljs.core/pr-seq-writer","devtools.formatters.printing/managed-print-via-protocol","cljs.core/-pr-writer"]],"~:used-vars",["^H",["~$devtools.format/IDevtoolsFormat","~$cljs.core/--destructure-map","~$devtools.formatters.printing/managed-print-via-protocol","~$cljs.core/PROTOCOL_SENTINEL","~$devtools.protocols/IFormat","~$cljs.core/*print-level*","~$devtools.formatters.printing/make-template-writer","~$devtools.formatters.state/is-circular?","~$devtools.formatters.helpers/directly-printable?","~$cljs.core/=","~$devtools.formatters.printing/already-reference?","~$devtools.formatters.printing/managed-print-via-writer","~$cljs.core/into-array","~$cljs.core/partial","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$devtools.formatters.printing/alt-printer-job","~$cljs.core/count","~$devtools.formatters.printing/wrap-group-in-reference-if-needed","~$devtools.formatters.printing/managed-print","~$cljs.core/pr-seq-writer","~$cljs.core/apply","~$devtools.formatters.printing/wrap-group-in-circular-warning-if-needed","~$devtools.formatters.state/get-current-state","~$devtools.formatters.printing/post-process-printed-output","~$devtools.formatters.printing/mark-as-markup","~$devtools.formatters.printing/build-markup","~$devtools.formatters.state/get-managed-print-level","~$devtools.formatters.printing/detect-edge-case-and-patch-it","~$cljs.core/concat","~$devtools.formatters.helpers/expandable?","~$devtools.formatters.state/get-current-path-info","~$cljs.core/native-satisfies?","~$devtools.formatters.printing/wrap-group-with-path-annotation","~$devtools.formatters.state/update-current-state!","~$devtools.formatters.helpers/abbreviated?","~$cljs.core/with-meta","~$devtools.formatters.printing/wrap-group-in-meta-if-needed","~$devtools.formatters.printing/markup?","~$cljs.core/get","~$devtools.formatters.state/push-object-to-current-history!","~$devtools.formatters.printing/wrap-value-as-reference-if-needed","~$devtools.prefs/pref","~$cljs.core/-pr-writer","~$cljs.core/nth","~$cljs.core/meta","~$devtools.formatters.printing/alt-printer-impl","~$cljs.core/next","~$cljs.core/not","~$cljs.core/assoc","~$devtools.formatters.state/*current-state*","~$devtools.formatters.printing/TemplateWriter","~$devtools.formatters.state/set-managed-print-level","~$cljs.core/first","~$devtools.formatters.state/add-object-to-current-path-info!","~$devtools.formatters.printing/->TemplateWriter","~$js/Error","~$devtools.formatters.helpers/should-render?"]]],"~:cache-keys",["~#cmap",[["^1K","goog/dom/tagname.js"],["5894b81ddad9694d9b92153e1834889eb8533444","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^V","~$goog.dom.HtmlElement"]]],["^1K","devtools/formatters/printing.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","^P","^Q","^R","^S","^T"]]],["^1K","devtools/formatters/helpers.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","^P","~$devtools.munging","^Q","^R"]]],["^1K","goog/html/trustedtypes.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/labs/useragent/browser.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.chromiumRebrands","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^1K","goog/html/safeurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^3G"]]],["^1K","goog/array/array.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F"]]],["^1K","goog/debug/error.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/flags/flags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/dom/nodetype.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/labs/useragent/highentropy/highentropyvalue.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3C","^3G"]]],["^1K","goog/string/typedstring.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/object/object.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/dom/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F"]]],"~:SHADOW-TIMESTAMP",[1759342938000,1759342938000,1759039018000],["^1K","goog/math/long.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","~$goog.reflect"]]],["^1K","goog/html/trustedresourceurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","~$goog.fs.blob","^3J","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3L","^3M"]]],["^1K","goog/string/internal.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/functions/functions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/html/safestyle.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3L","~$goog.html.SafeUrl","^3M","^3F","^3G"]]],["^1K","goog/dom/safe.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3Q","~$goog.html.SafeStyle","^3S","^3K","~$goog.html.uncheckedconversions","^3L","^3G"]]],["^1K","devtools/prefs.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","~$devtools.defaults"]]],["^1K","goog/asserts/dom.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.dom.TagName","^3F","~$goog.dom.element"]]],["^1K","goog/html/safehtml.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3L","^3Q","^3X","~$goog.html.SafeStyleSheet","^3S","^3[","^3K","^3M","^3F","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^3G","~$goog.dom.tags","^3R"]]],["^1K","goog/dom/tags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^44"]]],["^1K","devtools/munging.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","~$clojure.string","~$devtools.context","^44","~$goog.string.StringBuffer"]]],["^1K","goog/fs/blob.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/asserts/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1K","goog/uri/uri.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^43","^3F","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1K","goog/labs/useragent/highentropy/highentropydata.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3D"]]],["^1K","goog/collections/maps.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/fs/url.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/base.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",[]]],["^1K","goog/structs/structs.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^43","^44"]]],["^1K","clojure/string.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","^4<","^48"]]],["^1K","devtools/formatters/state.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U"]]],["^1K","goog/string/string.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.dom.safe","^3Y","^3L","^3G"]]],["^1K","goog/reflect/reflect.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/labs/useragent/util.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3G","^3I"]]],["^1K","goog/string/stringbuffer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/labs/useragent/chromium_rebrands.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","goog/labs/useragent/useragent.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.flags"]]],["^1K","goog/dom/element.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^4:","^3["]]],["^1K","goog/html/uncheckedconversions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","^3W","^3Q","^3X","^41","^3S","^3K","^3L","^3G"]]],["^1K","devtools/defaults.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U"]]],["^1K","goog/dom/htmlelement.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V"]]],["^1K","cljs/core.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","~$goog.math.Long","~$goog.math.Integer","^4<","^44","^43","~$goog.Uri","^48"]]],["^1K","goog/html/safescript.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3L","^3M","^3R","^3F"]]],["^1K","devtools/context.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U"]]],["^1K","goog/html/safestylesheet.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3L","^3X","^3M","^44","^3F","^3G"]]],["^1K","goog/math/integer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3O"]]],["^1K","devtools/format.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U","^47"]]],["^1K","goog/uri/utils.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","^4<"]]],["^1K","goog/string/const.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^3F","^3M"]]],["^1K","devtools/protocols.cljs"],["66c848ad784f330b7f254fed393f670fa430a7ac","^3=",["^ ","^3>",null,"^3?",["^H",[]],"^3@",["^V","^U"]]]]],"~:clj-info",["^ ","jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/js_deps.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/java/io.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/core.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/tagged_literals.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/munging.clj",1759039023000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/data/json.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/compiler.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/instant.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/prefs.clj",1759039023000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl/namespaces.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/pprint.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/instant.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/util.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1759039023000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/core.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/set.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/string.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/env.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes/and_or.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/oops.clj",1759039023000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64_vlq.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/externs.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/edn.clj",1759038789000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",1,"^8",5,"^9",1,"^:",33],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F"],"^G",["^H",[]],"~:shadow/js-access-properties",["^H",["get-group","merge"]],"^I","^J","^K",["^ "],"^N",null,"^O",["^ ","^P","^P","^Q","^Q","^R","^R","^S","^S","^T","^T","^U","^U","^V","^V"],"^W",["^H",["^X","^Y"]],"~:shadow/js-access-global",["^H",["Error"]],"^Z",["^ ","^[","^S","^10","^R","^11","^T","^12","^R","^13","^Q","^14","^S","^15","^S","^16","^R","^17","^T","^18","^S","^19","^T","^1:","^P","^1;","^S","^1<","^S","^1=","^T","^1>","^R","^1?","^S","^1@","^S","^1A","^T","^1B","^S"],"~:defs",["^ ","~$->TemplateWriter",["^ ","~:protocol-inline",null,"^5",["^ ","~:protocols",["^H",["~$cljs.core/IWriter","~$cljs.core/Object"]],"^6","devtools/formatters/printing.cljs","^:",24,"^8",10,"~:factory","~:positional","^7",32,"^9",32,"~:arglists",["^1D",["~$quote",["^1D",[["~$group","~$markup-db"]]]]],"~:skip-protocol-flag",["^H",["^5C"]],"~:doc","Positional factory function for devtools.formatters.printing/TemplateWriter."],"^5B",["^H",["^5C","^5D"]],"^I","^38","^6","devtools/formatters/printing.cljs","^:",24,"~:method-params",["^1D",[["^5I","^5J"]]],"~:protocol-impl",null,"~:arglists-meta",["^1D",[null,null]],"^8",1,"~:variadic?",false,"^5E","^5F","^7",32,"~:ret-tag","^34","^9",32,"~:max-fixed-arity",2,"~:fn-var",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^5J"]]]]],"^5K",["^H",["^5C"]],"^5L","Positional factory function for devtools.formatters.printing/TemplateWriter."],"~$alt-printer-impl",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",120,"^8",7,"^9",120,"^:",23,"^5G",["^1D",["^5H",["^1D",[["~$obj","~$writer","~$opts"]]]]]],"^I","^2[","^6","devtools/formatters/printing.cljs","^:",23,"^5M",["^1D",[["^5U","^5V","^5W"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",120,"^9",120,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5U","^5V","^5W"]]]]]],"~$markup?",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",14,"^8",7,"^9",14,"^:",14,"^5G",["^1D",["^5H",["^1D",[["~$value"]]]]]],"^I","^2S","^6","devtools/formatters/printing.cljs","^:",14,"^5M",["^1D",[["^5Y"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",14,"^5Q","~$any","^9",14,"^5R",1,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5Y"]]]]]],"~$wrap-group-in-meta-if-needed",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",63,"^8",7,"^9",63,"^:",35,"^5G",["^1D",["^5H",["^1D",[["^5I","^5Y","^5J"]]]]]],"^I","^2R","^6","devtools/formatters/printing.cljs","^:",35,"^5M",["^1D",[["^5I","^5Y","^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",63,"^5Q",["^H",[null,"~$cljs.core/IVector"]],"^9",63,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^5Y","^5J"]]]]]],"~$mark-as-markup",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",17,"^8",7,"^9",17,"^:",21,"^5G",["^1D",["^5H",["^1D",[["^5Y"]]]]]],"^I","^2F","^6","devtools/formatters/printing.cljs","^:",21,"^5M",["^1D",[["^5Y"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",17,"^5Q",["^H",["~$clj","~$cljs.core/MetaFn","~$clj-nil"]],"^9",17,"^5R",1,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5Y"]]]]]],"~$detect-edge-case-and-patch-it",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",79,"^8",7,"^9",79,"^:",36,"^5G",["^1D",["^5H",["^1D",[["^5I","^5U","^5J"]]]]]],"^I","^2I","^6","devtools/formatters/printing.cljs","^:",36,"^5M",["^1D",[["^5I","^5U","^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",79,"^5Q",["^H",[null,"^60"]],"^9",79,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^5U","^5J"]]]]]],"~$wrap-group-in-reference-if-needed",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",49,"^8",7,"^9",49,"^:",40,"^5G",["^1D",["^5H",["^1D",[["^5I","^5U","^5J"]]]]]],"^I","^2?","^6","devtools/formatters/printing.cljs","^:",40,"^5M",["^1D",[["^5I","^5U","^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",49,"^5Q",["^H",[null,"^60"]],"^9",49,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^5U","^5J"]]]]]],"~$managed-print-via-writer",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",150,"^8",7,"^9",150,"^:",31,"^5G",["^1D",["^5H",["^1D",[["^5Y","~$tag","^5J"]]]]]],"^I","^28","^6","devtools/formatters/printing.cljs","^:",31,"^5M",["^1D",[["^5Y","^68","^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",150,"^5Q","~$cljs.core/LazySeq","^9",150,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5Y","^68","^5J"]]]]]],"~$already-reference?",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",45,"^8",7,"^9",45,"^:",25,"^5G",["^1D",["^5H",["^1D",[["^5I"]]]]]],"^I","^27","^6","devtools/formatters/printing.cljs","^:",25,"^5M",["^1D",[["^5I"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",45,"^5Q",["^H",["~$boolean","^64"]],"^9",45,"^5R",1,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I"]]]]]],"~$TemplateWriter",["^ ","~:num-fields",2,"^5B",["^H",["^5C","^5D"]],"^I","^34","^6","devtools/formatters/printing.cljs","^:",24,"~:type",true,"^8",10,"^7",32,"~:record",false,"^9",32,"~:tag","~$function","^5K",["^H",["^5C"]]],"~$wrap-value-as-reference-if-needed",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",25,"^8",7,"^9",25,"^:",40,"^5G",["^1D",["^5H",["^1D",[["^5J","^5Y"]]]]]],"^I","^2V","^6","devtools/formatters/printing.cljs","^:",40,"^5M",["^1D",[["^5J","^5Y"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",25,"^5Q",["^H",[null,"^62","^63","^64"]],"^9",25,"^5R",2,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5J","^5Y"]]]]]],"~$managed-print-via-protocol",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",154,"^8",7,"^9",154,"^:",33,"^5G",["^1D",["^5H",["^1D",[["^5Y","^68","^5J"]]]]]],"^I","^1[","^6","devtools/formatters/printing.cljs","^:",33,"^5M",["^1D",[["^5Y","^68","^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",154,"^5Q","^69","^9",154,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5Y","^68","^5J"]]]]]],"~$alt-printer-job",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",108,"^8",7,"^9",108,"^:",22,"^5G",["^1D",["^5H",["^1D",[["^5U","^5V","^5W"]]]]]],"^I","^2=","^6","devtools/formatters/printing.cljs","^:",22,"^5M",["^1D",[["^5U","^5V","^5W"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",108,"^5Q","^5Z","^9",108,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5U","^5V","^5W"]]]]]],"~$make-template-writer",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",40,"^8",7,"^9",40,"^:",27,"^5G",["^1D",["^5H",["^1D",[["^5J"]]]]]],"^I","^23","^6","devtools/formatters/printing.cljs","^:",27,"^5M",["^1D",[["^5J"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",40,"^5Q","^34","^9",40,"^5R",1,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5J"]]]]]],"~$wrap-group-in-circular-warning-if-needed",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",58,"^8",7,"^9",58,"^:",47,"^5G",["^1D",["^5H",["^1D",[["^5I","^5J","~$circular?"]]]]]],"^I","^2C","^6","devtools/formatters/printing.cljs","^:",47,"^5M",["^1D",[["^5I","^5J","^6G"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",58,"^5Q",["^H",[null,"^60"]],"^9",58,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^5J","^6G"]]]]]],"~$managed-print",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",134,"^8",7,"^9",134,"^:",20,"^5G",["^1D",["^5H",["^1D",[["^68","^5J","~$printer"]]]]]],"^I","^2@","^6","devtools/formatters/printing.cljs","^:",20,"^5M",["^1D",[["^68","^5J","^6I"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",134,"^5Q","^69","^9",134,"^5R",3,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^68","^5J","^6I"]]]]]],"~$build-markup",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",20,"^8",7,"^9",20,"^:",19,"^5G",["^1D",["^5H",["^1D",[["^5J","~$fn-key","~$&","~$args"]]]]],"~:top-fn",["^ ","^5P",true,"~:fixed-arity",2,"^5R",2,"^5M",[["^1D",["^5J","^6K","^6L"]]],"^5G",["^1D",[["^5J","^6K","~$&","^6L"]]],"^5O",["^1D",[null]]]],"^I","^2G","^6","devtools/formatters/printing.cljs","^:",19,"^6M",["^ ","^5P",true,"^6N",2,"^5R",2,"^5M",[["^1D",["^5J","^6K","^6L"]]],"^5G",["^1D",[["^5J","^6K","~$&","^6L"]]],"^5O",["^1D",[null]]],"^5M",[["^1D",["^5J","^6K","^6L"]]],"^5N",null,"^6N",2,"^5O",["^1D",[null]],"^8",1,"^5P",true,"~:methods",[["^ ","^6N",2,"^5P",true,"^6@",["^H",["^62","^63","^64"]]]],"^7",20,"^5Q","^5Z","^9",20,"^5R",2,"^5S",true,"^5G",["^1D",[["^5J","^6K","~$&","^6L"]]]],"~$post-process-printed-output",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",98,"^8",7,"^9",98,"^:",34,"^5G",["^1D",["^5H",["^1D",[["~$output-group","^5U","^5J","^6G","~$path-info"]]]]]],"^I","^2E","^6","devtools/formatters/printing.cljs","^:",34,"^5M",["^1D",[["^6Q","^5U","^5J","^6G","^6R"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",98,"^5Q",["^H",[null,"^60"]],"^9",98,"^5R",5,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^6Q","^5U","^5J","^6G","^6R"]]]]]],"~$wrap-group-with-path-annotation",["^ ","^5A",null,"^5",["^ ","^6","devtools/formatters/printing.cljs","^7",92,"^8",7,"^9",92,"^:",38,"^5G",["^1D",["^5H",["^1D",[["^5I","^6R"]]]]]],"^I","^2N","^6","devtools/formatters/printing.cljs","^:",38,"^5M",["^1D",[["^5I","^6R"]]],"^5N",null,"^5O",["^1D",[null,null]],"^8",1,"^5P",false,"^7",92,"^5Q",["^H",[null,"^60"]],"^9",92,"^5R",2,"^5S",true,"^5G",["^1D",["^5H",["^1D",[["^5I","^6R"]]]]]]],"^Y",["^ ","^F","^F","^U","^U","^P","^P"],"~:cljs.analyzer/constants",["^ ","^W",["^H",["~:render-metas","~:else","~:max-header-elements","~:render-path-annotations","^5I","~:fallback-impl","~:meta-wrapper","~:raw-surrogate","~:native-reference","~:markup-db","~:reference-surrogate","~:more-marker","~:reference","~:print-length","^5J","~:circular-reference","~:expandable","~:target","~:mutable","~:alt-impl","~:atomic","~:devtools.formatters.printing/markup"]],"~:order",["^7<","^72","^5I","^79","^5J","^77","^6[","^78","^74","^76","^6U","^6Z","^70","^6V","^6X","^71","^7;","^6Y","^75","^7:","^73","^6W"]],"^1G",["^ ","^Y",["^H",[]],"^X",["^H",[]]],"^1H",[],"^1I",["^V","^U","^P","^Q","^R","^S","^T"]],"^M","^J","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^3<",[["^7@","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^7@","~:shadow-tweaks"],null,["^7@","~:source-map-inline"],null,["^7@","~:shadow-optimize-constants"],null,["^7@","~:elide-asserts"],false,["^7@","~:optimize-constants"],null,["^7@","^1N"],null,["^7@","~:external-config"],null,["^7@","~:tooling-config"],null,["^7@","~:emit-constants"],null,["^7@","~:load-tests"],null,["^7@","~:form-size-threshold"],null,["^7@","~:global-goog-object&array"],null,["^7@","~:data-readers"],null,["~:shadow.build/config","^78"],"~:browser",["^7@","~:infer-externs"],true,["^7@","^1P"],null,["^7B","~:js-provider"],"~:external",["~:mode"],"~:dev",["^7@","~:fn-invoke-direct"],null,["^7@","~:source-map"],"/dev/null"]]]