["^ ","~:output",["^ ","~:js","goog.provide('re_frame.loggers');\n/**\n * Holds the current set of logging functions.\n * By default, re-frame uses the functions provided by js/console.\n * Use `set-loggers!` to change these defaults\n *   \n */\nre_frame.loggers.loggers = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"log\",\"log\",-1595516004),console.log.bind(console),new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),console.warn.bind(console),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),console.error.bind(console),new cljs.core.Keyword(null,\"debug\",\"debug\",-1608172596),console.debug.bind(console),new cljs.core.Keyword(null,\"group\",\"group\",582596132),(cljs.core.truth_(console.group)?console.group.bind(console):console.log.bind(console)),new cljs.core.Keyword(null,\"groupEnd\",\"groupEnd\",-337721382),(cljs.core.truth_(console.groupEnd)?console.groupEnd.bind(console):(function (){\nreturn cljs.core.List.EMPTY;\n}))], null));\nre_frame.loggers.console = (function re_frame$loggers$console(var_args){\nvar args__5755__auto__ = [];\nvar len__5749__auto___23621 = arguments.length;\nvar i__5750__auto___23622 = (0);\nwhile(true){\nif((i__5750__auto___23622 < len__5749__auto___23621)){\nargs__5755__auto__.push((arguments[i__5750__auto___23622]));\n\nvar G__23623 = (i__5750__auto___23622 + (1));\ni__5750__auto___23622 = G__23623;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5756__auto__ = ((((1) < args__5755__auto__.length))?(new cljs.core.IndexedSeq(args__5755__auto__.slice((1)),(0),null)):null);\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5756__auto__);\n});\n\n(re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic = (function (level,args){\nif(cljs.core.contains_QMARK_(cljs.core.deref(re_frame.loggers.loggers),level)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"re-frame: log called with unknown level: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(level)].join(''),\"\\n\",\"(contains? (clojure.core/deref loggers) level)\"].join('')));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var G__23613 = cljs.core.deref(re_frame.loggers.loggers);\nreturn (level.cljs$core$IFn$_invoke$arity$1 ? level.cljs$core$IFn$_invoke$arity$1(G__23613) : level.call(null,G__23613));\n})(),args);\n}));\n\n(re_frame.loggers.console.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(re_frame.loggers.console.cljs$lang$applyTo = (function (seq23611){\nvar G__23612 = cljs.core.first(seq23611);\nvar seq23611__$1 = cljs.core.next(seq23611);\nvar self__5734__auto__ = this;\nreturn self__5734__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23612,seq23611__$1);\n}));\n\nre_frame.loggers.set_loggers_BANG_ = (function re_frame$loggers$set_loggers_BANG_(new_loggers){\nif(cljs.core.empty_QMARK_(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(new_loggers)),cljs.core.set(cljs.core.keys(cljs.core.deref(re_frame.loggers.loggers)))))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Unknown keys in new-loggers\",\"\\n\",\"(empty? (difference (set (keys new-loggers)) (-> (clojure.core/deref loggers) keys set)))\"].join('')));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.loggers.loggers,cljs.core.merge,new_loggers);\n});\n/**\n * Get the current logging functions used by re-frame.\n */\nre_frame.loggers.get_loggers = (function re_frame$loggers$get_loggers(){\nreturn cljs.core.deref(re_frame.loggers.loggers);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","re_frame/loggers.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",21],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$react","~$shadow.js.shim.module$react"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$re-frame.loggers","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.set","^N","~$cljs.core","^O","~$goog","^P"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$difference","^N"],"~:require-macros",["^ ","^O","^O"],"~:form",["~#list",["~$ns","^H",["^W",["^R",["^N","~:refer",["^T"]]]]]],"~:flags",["^ ","^R",["^F",[]]],"~:js-deps",[],"~:deps",["^P","^O","^N"]],"^K","^H","~:resource-id",["~:shadow.build.classpath/resource","re_frame/loggers.cljc"],"~:compiled-at",1759342953757,"^I",["^ ","^N","^N","^O","^O","^P","^P"],"~:resource-name","re_frame/loggers.cljc","~:warnings",[],"~:source","(ns re-frame.loggers\n  (:require\n   [clojure.set :refer [difference]]\n   #?@(:clj [[clojure.string :as str]\n             [clojure.tools.logging :as log]])))\n\n#?(:clj (defn log [level & args]\n          (log/log level (if (= 1 (count args))\n                           (first args)\n                           (str/join \" \" args)))))\n\n;; XXX should loggers be put in the registrar ??\n(def ^:private loggers\n  \"Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  \"\n  (atom #?(:cljs {:log       (js/console.log.bind   js/console)\n                  :warn      (js/console.warn.bind  js/console)\n                  :error     (js/console.error.bind js/console)\n                  :debug     (js/console.debug.bind js/console)\n                  :group     (if (.-group js/console)         ;; console.group does not exist  < IE 11\n                               (js/console.group.bind js/console)\n                               (js/console.log.bind   js/console))\n                  :groupEnd  (if (.-groupEnd js/console)        ;; console.groupEnd does not exist  < IE 11\n                               (js/console.groupEnd.bind js/console)\n                               #())})\n        ;; clojure versions\n        #?(:clj {:log      (partial log :info)\n                 :warn     (partial log :warn)\n                 :error    (partial log :error)\n                 :debug    (partial log :debug)\n                 :group    (partial log :info)\n                 :groupEnd  #()})))\n\n(defn console\n  [level & args]\n  (assert (contains? @loggers level) (str \"re-frame: log called with unknown level: \" level))\n  (apply (level @loggers) args))\n\n(defn set-loggers!\n  [new-loggers]\n  (assert  (empty? (difference (set (keys new-loggers)) (-> @loggers keys set))) \"Unknown keys in new-loggers\")\n  (swap! loggers merge new-loggers))\n\n(defn get-loggers\n  \"Get the current logging functions used by re-frame.\"\n  []\n  @loggers)\n","~:reader-features",["^F",["~:cljs"]],"~:used-var-namespaces",["^F",["^O","~$js","^N","^H"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";AAYA;;;;;;AAAeA,2BAKb,6CAAA,2CAAA,8EAAA,gFAAA,mFAAA,oFAAA,8IAAA,3iBAACC,4IAA0B,AAACC,iBAAsBC,8DACvB,AAACC,kBAAsBD,gEACvB,AAACE,mBAAsBF,iEACvB,AAACG,mBAAsBH,+DACvB,kBAAI,AAASA,eACX,AAACI,mBAAsBJ,SACvB,AAACD,iBAAsBC,uEACzB,mEAAA,jDAAI,AAAYA,kBACd,AAACK,sBAAyBL;AAD5B,AAAA;;AAW7B,AAAA,2BAAA,mCAAAM,9DAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,8DAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,gEAAA,hEAAME,2EACHM,MAAQC;AADX,AAEE,GAAQ,0BAAA,AAAAE,1BAACC,0CAAWzB,0BAAQqB;AAA5B;AAAA,AAAA,MAAA,KAAAE,MAAA,CAAA,4HAAA,KAAA,/GAAmC,CAAA,wFAAiDF;;;AACpF,OAACK,8CAAM,iBAAAC,WAAA,AAAAH,gBAAQxB;AAAR,AAAA,kFAAA2B,4BAAAA,tGAACN,sCAAAA,gDAAAA;KAAgBC;;;AAH1B,CAAA,mDAAA,nDAAMP;;AAAN;AAAA,CAAA,6CAAA,WAAAC,xDAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAKA,qCAAA,rCAAMY,kFACHC;AADH,AAEE,GAAS,AAACC,uBAAO,AAACC,qDAAW,AAACC,cAAI,AAACC,eAAKJ,cAAc,cAAA,eAAA,AAAAL,gBAAKxB,/BAAQiC,dAAKD;AAAxE;AAAA,AAAA,MAAA,KAAAT,MAAA,CAAA,kBAAA,8BAAA,KAAA;;;AACA,OAACW,mDAAMlC,yBAAQmC,gBAAMN;;AAEvB;;;+BAAA,/BAAMO;AAAN,AAAA,OAAAZ,gBAGGxB","names",["re-frame.loggers/loggers","cljs.core.atom","js/console.log.bind","js/console","js/console.warn.bind","js/console.error.bind","js/console.debug.bind","js/console.group.bind","js/console.groupEnd.bind","var_args","args__5755__auto__","len__5749__auto__","i__5750__auto__","argseq__5756__auto__","cljs.core/IndexedSeq","re-frame.loggers/console","seq23611","G__23612","cljs.core/first","cljs.core/next","self__5734__auto__","level","args","js/Error","cljs.core/deref","cljs.core/contains?","cljs.core.apply","G__23613","re-frame.loggers/set-loggers!","new-loggers","cljs.core/empty?","clojure.set.difference","cljs.core/set","cljs.core/keys","cljs.core.swap_BANG_","cljs.core/merge","re-frame.loggers/get-loggers"]],"~:used-vars",["^F",["~$cljs.core/keys","~$re-frame.loggers/set-loggers!","~$cljs.core/IndexedSeq","~$cljs.core/deref","~$js/console.group.bind","~$cljs.core/apply","~$re-frame.loggers/console","~$cljs.core/atom","~$js/console","~$cljs.core/set","~$cljs.core/empty?","~$js/console.warn.bind","~$cljs.core/contains?","~$js/console.debug.bind","~$js/console.error.bind","~$cljs.core/swap!","~$js/console.groupEnd.bind","~$clojure.set/difference","~$cljs.core/next","~$js/console.log.bind","~$cljs.core/first","~$cljs.core/merge","~$re-frame.loggers/loggers","~$js/Error","~$re-frame.loggers/get-loggers"]]],"~:cache-keys",["~#cmap",[["^12","goog/dom/tagname.js"],["5894b81ddad9694d9b92153e1834889eb8533444","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["^P","~$goog.dom.HtmlElement"]]],["^12","goog/html/trustedtypes.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/labs/useragent/browser.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.labs.userAgent.util","~$goog.labs.userAgent.highEntropy.highEntropyValue","~$goog.labs.userAgent.chromiumRebrands","~$goog.asserts","~$goog.string.internal","~$goog.labs.userAgent.highEntropy.highEntropyData","~$goog.labs.userAgent"]]],["^12","goog/html/safeurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.string.Const","~$goog.string.TypedString","^28"]]],["^12","re_frame/loggers.cljc"],["74e132cc593ed2d72a5d4874954c58677a905f0e","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^O","^N"]]],["^12","goog/array/array.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27"]]],["^12","goog/debug/error.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/flags/flags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/dom/nodetype.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/labs/useragent/highentropy/highentropyvalue.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^24","^28"]]],["^12","goog/string/typedstring.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/object/object.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/dom/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27"]]],"~:SHADOW-TIMESTAMP",[1759342938000,1759342938000,1759039018000],["^12","goog/math/long.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","~$goog.reflect"]]],["^12","goog/html/trustedresourceurl.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","~$goog.fs.blob","^2;","~$goog.html.SafeScript","~$goog.html.trustedtypes","^2=","^2>"]]],["^12","goog/string/internal.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/functions/functions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/html/safestyle.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2=","~$goog.html.SafeUrl","^2>","^27","^28"]]],["^12","goog/dom/safe.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","~$goog.asserts.dom","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^2B","~$goog.html.SafeStyle","^2D","^2<","~$goog.html.uncheckedconversions","^2=","^28"]]],["^12","goog/asserts/dom.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.dom.TagName","^27","~$goog.dom.element"]]],["^12","goog/html/safehtml.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2=","^2B","^2I","~$goog.html.SafeStyleSheet","^2D","^2K","^2<","^2>","^27","~$goog.labs.userAgent.browser","~$goog.array","~$goog.object","^28","~$goog.dom.tags","^2C"]]],["^12","goog/dom/tags.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2P"]]],["^12","goog/fs/blob.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/asserts/asserts.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^12","goog/uri/uri.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2O","^27","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^12","goog/labs/useragent/highentropy/highentropydata.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^25"]]],["^12","goog/collections/maps.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/fs/url.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/base.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",[]]],["^12","goog/structs/structs.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2O","^2P"]]],["^12","goog/string/string.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.dom.safe","^2J","^2=","^28"]]],["^12","goog/reflect/reflect.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/labs/useragent/util.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^28","^2:"]]],["^12","goog/string/stringbuffer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/labs/useragent/chromium_rebrands.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","goog/labs/useragent/useragent.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.flags"]]],["^12","goog/dom/element.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2S","^2K"]]],["^12","goog/html/uncheckedconversions.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","^2H","^2B","^2I","^2M","^2D","^2<","^2=","^28"]]],["^12","goog/dom/htmlelement.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P"]]],["^12","cljs/core.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","~$goog.math.Long","~$goog.math.Integer","^2U","^2P","^2O","~$goog.Uri","~$goog.string.StringBuffer"]]],["^12","goog/html/safescript.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2=","^2>","^2C","^27"]]],["^12","goog/html/safestylesheet.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2=","^2I","^2>","^2P","^27","^28"]]],["^12","goog/math/integer.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^2@"]]],["^12","clojure/set.cljs"],["29b0d50db86dc25d9e60d7c39586a3f5dfbf4c5b","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^O"]]],["^12","goog/uri/utils.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","^2U"]]],["^12","goog/string/const.js"],["5894b81ddad9694d9b92153e1834889eb8533444","^1[",["^ ","^20",null,"^21",["^F",[]],"^22",["^P","^27","^2>"]]]]],"~:clj-info",["^ ","jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/js_deps.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/java/io.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/core.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/tagged_literals.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/data/json.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/compiler.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/instant.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/impl/namespaces.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/pprint.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/instant.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/util.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/binaryage/devtools/1.0.6/devtools-1.0.6.jar!/devtools/defaults.clj",1759039023000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/core.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/set.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/string.clj",1759038789000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/env.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes/and_or.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/source_map/base64_vlq.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/analyzer/passes.cljc",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojurescript/1.12.42/clojurescript-1.12.42.jar!/cljs/externs.clj",1759039018000,"jar:file:/Users/paul/.m2/repository/org/clojure/clojure/1.12.0/clojure-1.12.0.jar!/clojure/edn.clj",1759038789000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","re_frame/loggers.cljc","^7",1,"^8",5,"^9",1,"^:",21],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^I",["^ "],"^L",null,"^M",["^ ","^N","^N","^O","^O","^P","^P"],"^Q",["^F",["^R"]],"~:shadow/js-access-global",["^F",["Error"]],"^S",["^ ","^T","^N"],"~:defs",["^ ","~$loggers",["^ ","^5",["^ ","^6","re_frame/loggers.cljc","^7",13,"^8",16,"^9",13,"^:",23,"~:private",true],"^3W",true,"^G","^1V","^6","re_frame/loggers.cljc","^:",23,"^8",1,"^7",13,"^9",13,"~:tag","~$cljs.core/Atom","~:doc","Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  "],"~$console",["^ ","~:protocol-inline",null,"^5",["^ ","^6","re_frame/loggers.cljc","^7",36,"^8",7,"^9",36,"^:",14,"~:arglists",["^W",["~$quote",["^W",[["~$level","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^W",["^43","^44"]]],"^41",["^W",[["^43","~$&","^44"]]],"~:arglists-meta",["^W",[null]]]],"^G","^1F","^6","re_frame/loggers.cljc","^:",14,"^45",["^ ","^46",true,"^47",1,"^48",1,"^49",[["^W",["^43","^44"]]],"^41",["^W",[["^43","~$&","^44"]]],"^4:",["^W",[null]]],"^49",[["^W",["^43","^44"]]],"~:protocol-impl",null,"^47",1,"^4:",["^W",[null]],"^8",1,"^46",true,"~:methods",[["^ ","^47",1,"^46",true,"^3X","~$any"]],"^7",36,"~:ret-tag","^4=","^9",36,"^48",1,"~:fn-var",true,"^41",["^W",[["^43","~$&","^44"]]]],"~$set-loggers!",["^ ","^40",null,"^5",["^ ","^6","re_frame/loggers.cljc","^7",41,"^8",7,"^9",41,"^:",19,"^41",["^W",["^42",["^W",[["~$new-loggers"]]]]]],"^G","^1A","^6","re_frame/loggers.cljc","^:",19,"^49",["^W",[["^4A"]]],"^4;",null,"^4:",["^W",[null,null]],"^8",1,"^46",false,"^7",41,"^4>",["^F",[null,"^4="]],"^9",41,"^48",1,"^4?",true,"^41",["^W",["^42",["^W",[["^4A"]]]]]],"~$get-loggers",["^ ","^40",null,"^5",["^ ","^6","re_frame/loggers.cljc","^7",46,"^8",7,"^9",46,"^:",18,"^41",["^W",["^42",["^W",[[]]]]],"^3Z","Get the current logging functions used by re-frame."],"^G","^1X","^6","re_frame/loggers.cljc","^:",18,"^49",["^W",[[]]],"^4;",null,"^4:",["^W",[null,null]],"^8",1,"^46",false,"^7",46,"^4>","^4=","^9",46,"^48",0,"^4?",true,"^41",["^W",["^42",["^W",[[]]]]],"^3Z","Get the current logging functions used by re-frame."]],"^U",["^ ","^O","^O"],"~:cljs.analyzer/constants",["^ ","^Q",["^F",["~:group","~:warn","~:debug","~:error","~:groupEnd","~:log"]],"~:order",["^4I","^4E","^4G","^4F","^4D","^4H"]],"^Z",["^ ","^R",["^F",[]]],"^[",[],"^10",["^P","^O","^N"]],"^K","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^F",[]],"~:compiler-options",["^1Z",[["^4M","~:static-fns"],true,["~:js-options","~:use-babel"],null,["^4M","~:shadow-tweaks"],null,["^4M","~:source-map-inline"],null,["^4M","~:shadow-optimize-constants"],null,["^4M","~:elide-asserts"],false,["^4M","~:optimize-constants"],null,["^4M","^15"],null,["^4M","~:external-config"],null,["^4M","~:tooling-config"],null,["^4M","~:emit-constants"],null,["^4M","~:load-tests"],null,["^4M","~:form-size-threshold"],null,["^4M","~:global-goog-object&array"],null,["^4M","~:data-readers"],null,["~:shadow.build/config","~:target"],"~:browser",["^4M","~:infer-externs"],true,["^4M","^17"],null,["^4O","~:js-provider"],"~:external",["~:mode"],"~:dev",["^4M","~:fn-invoke-direct"],null,["^4M","~:source-map"],"/dev/null"]]]