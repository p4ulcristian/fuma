{"version":3,"sources":["ui/header.cljs"],"mappings":"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","names":["G__27880","G__27881","zero.frontend.re-frame/reg-event-db","p__27882","vec__27883","cljs.core.nth","db","_","language","cljs.core.println","updated-db","cljs.core/assoc-in","cljs.core.get_in","G__27886","G__27887","zero.frontend.re-frame/reg-sub","current-lang","G__27888","G__27889","p__27890","vec__27891","theme","G__27894","G__27895","current-theme","G__27896","zero.frontend.re-frame/dispatch","G__27897","ui.header/get-workspace-id","cljs.core/deref","router.frontend.zero/state","ui.header/handle-logo-click","router.frontend.zero/navigate!","ui.header/handle-language-toggle","current-language","new-language","cljs.core._EQ_","G__27898","ui.header/handle-theme-toggle","new-theme","G__27899","ui.header/language-toggle","G__27900","zero.frontend.re-frame/subscribe","G__27901","theme-colors","ui.theme/get-theme-colors","e","ui.header/theme-toggle","G__27902","ui.header/header","G__27903","tr/tr","ui.header/view"],"sourcesContent":["(ns ui.header\n  (:require\n   [ui.button :as button]\n   [ui.theme :as theme]\n   [zero.frontend.re-frame :as rf]\n   [parquery.frontend.request :as parquery]\n   [router.frontend.zero :as router]))\n\n;; Re-frame events and subscriptions\n(rf/reg-event-db\n :header/set-language\n (fn [db [_ language]]\n   (println \"DEBUG: re-frame event :header/set-language called with:\" language)\n   (let [updated-db (assoc-in db [:header :language] language)]\n     (println \"DEBUG: Updated db header section:\" (get-in updated-db [:header]))\n     updated-db)))\n\n(rf/reg-sub\n :header/current-language\n (fn [db _]\n   (let [current-lang (get-in db [:header :language] :hu)]\n     (println \"DEBUG: subscription :header/current-language returning:\" current-lang)\n     current-lang)))\n\n;; Theme management\n(rf/reg-event-db\n :header/set-theme\n (fn [db [_ theme]]\n   (println \"DEBUG: re-frame event :header/set-theme called with:\" theme)\n   (let [updated-db (assoc-in db [:header :theme] theme)]\n     (println \"DEBUG: Updated db header theme:\" (get-in updated-db [:header :theme]))\n     updated-db)))\n\n(rf/reg-sub\n :header/current-theme\n (fn [db _]\n   (let [current-theme (get-in db [:header :theme] :light)]\n     (println \"DEBUG: subscription :header/current-theme returning:\" current-theme)\n     current-theme)))\n\n;; Initialize defaults\n(rf/dispatch [:header/set-language :hu])\n(rf/dispatch [:header/set-theme :light])\n\n;; Navigation helpers\n(defn- get-workspace-id []\n  \"Get workspace ID from router parameters\"\n  (get-in @router/state [:parameters :path :workspace-id]))\n\n(defn handle-logo-click []\n  \"Navigate to homepage when logo/title is clicked\"\n  (router/navigate! {:path \"/\"}))\n\n;; Event handlers\n(defn handle-language-toggle [current-language]\n  \"Toggle language between en and hu\"\n  (let [new-language (if (= current-language :en) :hu :en)]\n    (println \"DEBUG: Toggling language from\" current-language \"to\" new-language)\n    (rf/dispatch [:header/set-language new-language])\n    (println \"DEBUG: Dispatched event\")))\n\n(defn handle-theme-toggle [current-theme]\n  \"Toggle theme between light and dark\"\n  (let [new-theme (if (= current-theme :light) :dark :light)]\n    (println \"DEBUG: Toggling theme from\" current-theme \"to\" new-theme)\n    (rf/dispatch [:header/set-theme new-theme])\n    (println \"DEBUG: Dispatched theme event\")))\n\n(defn language-toggle\n  \"Language toggle between English and Hungarian\"\n  []\n  (let [current-language (rf/subscribe [:header/current-language])\n        current-theme (rf/subscribe [:header/current-theme])\n        theme-colors (theme/get-theme-colors @current-theme)]\n    [:div.language-toggle\n     [:button\n      {:style {:background (get-in theme-colors [:background :tertiary])\n               :color (get-in theme-colors [:text :primary])\n               :border (str \"1px solid \" (get-in theme-colors [:border :secondary]))\n               :border-radius \"6px\"\n               :padding \"0.5rem 0.75rem\"\n               :font-size \"0.875rem\"\n               :font-weight \"500\"\n               :cursor \"pointer\"\n               :transition \"all 0.2s ease\"\n               :box-shadow (get-in theme-colors [:shadow :light])}\n       :on-click #(handle-language-toggle @current-language)\n       :on-mouse-enter (fn [e]\n                         (set! (.-background (.-style (.-target e)))\n                               (get-in theme-colors [:accent :primary])))\n       :on-mouse-leave (fn [e]\n                         (set! (.-background (.-style (.-target e)))\n                               (get-in theme-colors [:background :tertiary])))}\n      (if (= @current-language :en) \"EN\" \"HU\")]]))\n\n(defn theme-toggle\n  \"Theme toggle between light and dark mode\"\n  []\n  (let [current-theme (rf/subscribe [:header/current-theme])\n        theme-colors (theme/get-theme-colors @current-theme)]\n    [:div.theme-toggle\n     [:button\n      {:style {:background (get-in theme-colors [:background :tertiary])\n               :color (get-in theme-colors [:text :primary])\n               :border (str \"1px solid \" (get-in theme-colors [:border :secondary]))\n               :border-radius \"6px\"\n               :padding \"0.5rem 0.75rem\"\n               :font-size \"0.875rem\"\n               :font-weight \"500\"\n               :cursor \"pointer\"\n               :transition \"all 0.2s ease\"\n               :box-shadow (get-in theme-colors [:shadow :light])}\n       :on-click #(handle-theme-toggle @current-theme)\n       :on-mouse-enter (fn [e]\n                         (set! (.-background (.-style (.-target e)))\n                               (get-in theme-colors [:accent :primary])))\n       :on-mouse-leave (fn [e]\n                         (set! (.-background (.-style (.-target e)))\n                               (get-in theme-colors [:background :tertiary])))}\n      (if (= @current-theme :light) \"\ud83c\udf19\" \"\u2600\ufe0f\")]]))\n\n(defn header\n  \"Main application header with logo, language toggle, and logout button\"\n  []\n  (let [current-theme @(rf/subscribe [:header/current-theme])\n        theme-colors (theme/get-theme-colors current-theme)]\n    [:header.app-header\n     {:style {:background (get-in theme-colors [:background :secondary])\n              :border-bottom (str \"1px solid \" (get-in theme-colors [:border :primary]))\n              :box-shadow (get-in theme-colors [:shadow :light])\n              :padding \"1rem 2rem\"\n              :position \"sticky\"\n              :top \"0\"\n              :z-index \"1000\"}}\n     [:div.header-content\n      {:style {:display \"flex\"\n               :justify-content \"space-between\"\n               :align-items \"center\"\n               :max-width \"1200px\"\n               :margin \"0 auto\"}}\n      [:div.header-left\n       {:on-click handle-logo-click\n        :style {:cursor \"pointer\" :display \"flex\" :align-items \"center\" :gap \"0.5rem\"}}\n       [:img.logo {:src \"/logo/logo-256.webp\" :alt \"Logo\"\n                   :style {:height \"32px\" :width \"32px\"}}]\n       [:span.brand-name\n        {:style {:font-size \"1.25rem\"\n                 :font-weight \"600\"\n                 :color (get-in theme-colors [:text :primary])}}\n        (tr/tr :header/brand)]]\n      [:div.header-right\n       {:style {:display \"flex\" :align-items \"center\" :gap \"0.75rem\"}}\n       [theme-toggle]\n       [language-toggle]]]]))\n\n(defn view\n  \"Header component view function\"\n  []\n  [header])"]}